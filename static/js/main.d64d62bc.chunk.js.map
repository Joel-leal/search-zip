{"version":3,"sources":["Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Modal","onClose","zip","useState","returnError","setReturnError","cep","logradouro","complemento","bairro","localidade","uf","ibge","gia","ddd","siafi","zipInfo","setZipInfo","useEffect","fetch","then","response","json","data","catch","error","className","width","height","title","loading","allowFullScreen","src","onClick","App","isOpen","setIsOpen","value","setValue","isValid","length","type","name","onChange","e","target","disabled","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA0CeA,MAvCf,YAAkD,IAAD,IAAhCC,eAAgC,MAAtB,aAAsB,MAAZC,WAAY,MAAN,GAAM,EAC/C,EAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8BF,mBAAS,CACrCG,IAAK,gBACLC,WAAY,gBACZC,YAAa,gBACbC,OAAQ,gBACRC,WAAY,gBACZC,GAAI,gBACJC,KAAM,gBACNC,IAAK,gBACLC,IAAK,gBACLC,MAAO,kBAVT,mBAAOC,EAAP,KAAgBC,EAAhB,KAkBA,OANAC,qBAAU,WACRC,MAAM,4BAAD,OAA6BjB,EAA7B,WACFkB,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAUN,EAAWM,MAC1BC,OAAM,SAACC,GAAD,OAAWpB,EAAe,GAAD,OAAIH,EAAJ,4BACjC,CAACA,IAEF,sBAAKwB,UAAU,YAAf,UACE,wBAAOA,UAAU,aAAjB,yBAA2CV,EAAQT,cACnD,wBAAOmB,UAAU,SAAjB,qBAAmCV,EAAQP,UAC3C,wBAAOiB,UAAU,SAAjB,qBAAmCV,EAAQN,cAC3C,wBAAOgB,UAAU,KAAjB,iBAA2BV,EAAQL,MACnC,wBACEgB,MAAM,MACNC,OAAO,MACPC,MAAM,QACNC,QAAQ,OACRC,iBAAe,EACfC,IAAG,uDAAkD9B,EAAlD,kDAEL,4BAAIE,IACJ,wBAAQ6B,QAAShC,EAAjB,wBCTSiC,MAzBf,WACE,MAA4B/B,oBAAS,GAArC,mBAAOgC,EAAP,KAAeC,EAAf,KACA,EAA0BjC,mBAAS,IAAnC,mBAAOkC,EAAP,KAAcC,EAAd,KACMC,EAA2B,IAAjBF,EAAMG,OACtB,OACE,sBAAKd,UAAU,MAAf,UACE,6CACA,+CACA,kCACE,uBACEe,KAAK,OACLC,KAAK,OACLL,MAAOA,EACPM,SAAU,SAACC,GAAD,OAAON,EAASM,EAAEC,OAAOR,UAErC,yBAAQJ,QAAS,kBAAMG,GAAU,IAAOU,UAAWP,EAAnD,UACG,IADH,YAEY,UAGbJ,EAAS,cAAC,EAAD,CAAOjC,IAAKmC,EAAOpC,QAAS,kBAAMmC,GAAU,MAAa,SCZ1DW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7B,MAAK,YAAkD,IAA/C8B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.d64d62bc.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction Modal({ onClose = () => {}, zip = \"\" }) {\n  const [returnError, setReturnError] = useState(\"\");\n  const [zipInfo, setZipInfo] = useState({\n    cep: \"carregando...\",\n    logradouro: \"carregando...\",\n    complemento: \"carregando...\",\n    bairro: \"carregando...\",\n    localidade: \"carregando...\",\n    uf: \"carregando...\",\n    ibge: \"carregando...\",\n    gia: \"carregando...\",\n    ddd: \"carregando...\",\n    siafi: \"carregando...\",\n  });\n  useEffect(() => {\n    fetch(`https://viacep.com.br/ws/${zip}/json/`)\n      .then((response) => response.json())\n      .then((data) => setZipInfo(data))\n      .catch((error) => setReturnError(`${zip} n√£o encontrado`));\n  }, [zip]);\n  return (\n    <div className=\"container\">\n      <label className=\"logradouro\">Logradouro: {zipInfo.logradouro}</label>\n      <label className=\"bairro\">Bairro: {zipInfo.bairro}</label>\n      <label className=\"cidade\">Cidade: {zipInfo.localidade}</label>\n      <label className=\"uf\">UF: {zipInfo.uf}</label>\n      <iframe\n        width=\"600\"\n        height=\"450\"\n        title=\"busca\"\n        loading=\"lazy\"\n        allowFullScreen\n        src={`https://www.google.com/maps/embed/v1/place?q=${zip}&key=AIzaSyDaMzkE0Xlo_PeFAgEb0CYvV461AMf5J1k`}\n      ></iframe>\n      <p>{returnError}</p>\n      <button onClick={onClose}>fechar</button>\n    </div>\n  );\n}\nexport default Modal;\n","import \"./App.css\";\nimport Modal from \"./Modal\";\nimport React, { useState } from \"react\";\n\nfunction App() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const isValid = value.length === 8;\n  return (\n    <div className=\"App\">\n      <h1>Localizando</h1>\n      <div>Digite o CEP</div>\n      <label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n        />\n        <button onClick={() => setIsOpen(true)} disabled={!isValid}>\n          {\" \"}\n          Pesquisar{\" \"}\n        </button>\n      </label>\n      {isOpen ? <Modal zip={value} onClose={() => setIsOpen(false)} /> : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}